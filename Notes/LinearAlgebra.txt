

Nullspace:

computing the nullspace of an NxN matrix A works as follows:
-compute the row-echelon form of matrix A - let's call it B

-the number k of nonzero lines of B is called the rank
-the number of zero-lines N-k of B gives the dimensionality of the 
 nullspace - this number is call "nullity"
-to find a basis for the nullspace we may proceed as follows:

let's imagine, a 5x5 matrix B in row echelon form looks like this:

  1 2 3 4 5
  0 6 7 8 9
  0 0 1 2 3
  0 0 0 0 0
  0 0 0 0 0

We have 2 zero rows, so the nullity is 2 and the rank of B is 3. To find 
a basis for the nullspace, we must solve the linear system B * x = 0. This 
system has infinitely many solutions - in particular, it's a 2-parametric
continuum of solutions - we get to choose 2 free parameters. What we need to
find is a bsis in R^5 for a 2D subspace of it. To find 2 solution vectors, that 
we may use as basis, we must solve a 3x3 system 2 times, for two different 
right-hand sides. We obtain the coefficient matrix for this 3x3 system and 
the corresponding right hand sides by writing B * x = 0 as:

  1 2 3 4 5   x1   0      1*x1 + 2*x2 + 3*x3 + 4*x4 + 5*x5 = 0
  0 6 7 8 9   x2   0      0*x1 + 6*x2 + 7*x3 + 8*x4 + 9*x5 = 0
  0 0 1 2 3 * x3 = 0  ->  0*x1 + 0*x2 + 1*x3 + 2*x4 + 3*x5 = 0
  0 0 0 0 0   x4   0                                     0 = 0
  0 0 0 0 0   x5   0                                     0 = 0
  
Because the last two rows are all zeros, it doesn't matter what we choose for 
x4 and x5 - we may treat them as our free parameters. We choose 2 different
assignments, like x4=1, x5=0 and x4=0, x5=1 (in general, in each assignment 
we choose all values to be zero except one, which we set to 1 - we set each of
our free parameters to in turn). So this gives two systems:

  1 2 3 4 5   x1 x1 = 0 0
  0 6 7 8 9   x2 x2 = 0 0
  0 0 1 2 3 * x3 x3 = 0 0
  0 0 0 0 0    1  0 = 0 0
  0 0 0 0 0    0  1 = 0 0
  
we rewrite this as:

  1 2 3   x1 x1    0  0
  0 6 7 * x2 x2 = -4  0
  0 0 1   x3 x3    0 -9

These are two 3x3 linear systems which are already in triangular form, so we 
just need to throw the backsubstitution algo at it. But what if the first column
would be all zeros, like this:

  0 2 3   x1 x1    0  0       0*x1 + 2*x2 + 3*x3 =  0  0 
  0 6 7 * x2 x2 = -4  0  ->   0*x1 + 6*x2 + 7*x3 = -4  0
  0 0 1   x3 x3    0 -9       0*x1 + 0*x2 + 1*x3 =  0 -9 
  
Now, x1 doesn't appear in the equations anymore and we actually have 3 equations 
for 2 unknowns - we should probably make x4 variable again. Let's look again at
the full 5x5 system, this time with the leading 0 column:

  0 2 3 4 5   x1   0      0*x1 + 2*x2 + 3*x3 + 4*x4 + 5*x5 = 0
  0 6 7 8 9   x2   0      0*x1 + 6*x2 + 7*x3 + 8*x4 + 9*x5 = 0
  0 0 1 2 3 * x3 = 0  ->  0*x1 + 0*x2 + 1*x3 + 2*x4 + 3*x5 = 0
  0 0 0 0 0   x4   0                                     0 = 0
  0 0 0 0 0   x5   0                                     0 = 0
  
Let's only consider x5 as variable and assign it to x5=1 - we end up with:

  0 2 3 4 5   x1   0      2*x2 + 3*x3 + 4*x4 + 5 = 0
  0 6 7 8 9   x2   0      6*x2 + 7*x3 + 8*x4 + 9 = 0
  0 0 1 2 3 * x3 = 0  ->  0*x2 + 1*x3 + 2*x4 + 3 = 0
  0 0 0 0 0   x4   0                           0 = 0
  0 0 0 0 0    1   0                           0 = 0

so we have to solve:

  2 3 4   x2   -5
  6 7 8 * x3 = -9
  0 1 2   x4   -3
  
the key observation is that leading zero columns steal us degrees of freedoms 
which we must put back in by not fixing them too early. Now, we have to solve 
the 3x3 system only for a single right-hand-side (right)? But our nullspace is
supposed to be 2-dimensional, so we need to produce 2 basis vectors. Maybe we 
can choose one by letting x1=1 and the other one by letting x1=0. Maybe we are 
not totally free in the way which variables we elect to be our parameters - if 
some variable has a zero column, we have to choose it to be a parmeter - we 
can't simply say: the last two x4,y5 will be our parameters - the first one x1
has a zero column - so it must be among our parameters - that seems to make 
sense - this will complicate, how we set up the subsystem...



Maybe to see the general pattern better, consider this 9x9 system

0 0 0 0 1 2 3 4 5     0*x4 + 1*x5 + 2*x6 + 3*x7 + 4*x8 + 5*x9 = 0
0 0 0 6 7 8 9 1 2     6*x4 + 7*x5 + 8*x6 + 9*x7 + 1*x8 + 2*x9 = 0
0 0 0 3 4 5 6 7 8     3*x4 + 4*x5 + 5*x6 + 6*x7 + 7*x8 + 8*x9 = 0
0 0 0 9 1 2 3 4 5     9*x4 + 1*x5 + 2*x6 + 3*x7 + 4*x8 + 5*x9 = 0
0 0 0 0 6 7 8 9 1     0*x4 + 6*x5 + 7*x6 + 8*x7 + 9*x8 + 1*x9 = 0
0 0 0 0 0 2 3 4 5     0*x4 + 0*x5 + 2*x6 + 3*x7 + 4*x8 + 5*x9 = 0
0 0 0 0 0 0 6 7 8     0*x4 + 0*x5 + 0*x6 + 6*x7 + 7*x8 + 8*x9 = 0
0 0 0 0 0 0 0 0 0                                           0 = 0
0 0 0 0 0 0 0 0 0                                           0 = 0
 
The rank is 7, the dimension is 9, so the nullity is 9-7 = 2, so we need to 
produce a set of 2 vectors in R^9 to serve as basis for the nullspace. To this, 
end, we need to solve a 7x7 system for 2 different right hand sides. Let's 
write the reduced matrix:


0 1 2 3 4 5    x4 
6 7 8 9 1 2    x5
3 4 5 6 7 8    x6
9 1 2 3 4 5 *  x7
0 6 7 8 9 1    x8
0 0 2 3 4 5    x9
0 0 0 6 7 8

wait - these are 7 equations for 6 unknowns - this doesn't work out - i think the 
number of degrees of freedom is the number of zero-rows minus the number of 
zero-columns - but then - what about this little system:

  0 1 * x1 = 0    0*x1 + 1*x2 = 0  -> x2 = 0
  0 0   x2   0    0*x1 + 0*x2 = 0  -> x1 arbitrary -> basis of nullspace = {(1,0)}
  
zero-rows = zero-cols = 1, but we still have one degree of freedom. The fact 
that the coeffs are zero may not necessarily mean






Is this choice guaranteed to yield a (nonzero) solution? What if instead of 9, 
there would have been a zero at B(0,4)? Then the rhs would be the zero vector 
and so we would get a zero vector as solution. Maybe we should use the reduced
row echelon form? Consider:

  2 0 0 0 0   x1 x1 = 0 0
  0 3 0 0 0   x2 x2 = 0 0
  0 0 5 0 0 * x3 x3 = 0 0
  0 0 0 0 0    1  0 = 0 0
  0 0 0 0 0    0  1 = 0 0
  
rewrite it as:

  2 0 0 0 0   x1 x1 = 0 0
  0 3 0 0 0   x2 x2 = 0 0
  0 0 5 0 0 * x3 x3 = 0 0
  0 0 0 0 0    1  0 = 0 0
  0 0 0 0 0    0  1 = 0 0
  
oh - wait - even in reduced form, there may be nonzero entries above the diagonal - a diagonal
form is not always possible

see:
https://www.geeksforgeeks.org/null-space-and-nullity-of-a-matrix/



Eigenvalues:


Eigenspace:

The eigenspace of a matrix A to an eigenvalue x_i is the nullspace of the 
matrix A - x_i * I where I is the identity matrix. For each eigenvalue x_i, 
the dimensionality of the eigenspace is called the geometric multiplicity of 
x_i and this is less or equal to its algebraic multiplicity. The vectors that 
span the eigenspace of x_i are called the