https://easings.net/
Clicking on the graphics will lead to a page where javascript code is given for the functions
Ah - here is the code, I guess:
https://github.com/ai/easings.net

function easeInSine(   x: number): number { return 1 - Math.cos((x * Math.PI) / 2); }
function easeOutSine(  x: number): number { return Math.sin((x * Math.PI) / 2); }
function easeInOutSine(x: number): number { return -(Math.cos(Math.PI * x) - 1) / 2; }

function easeInQuad(   x: number): number { return x * x; }
function easeOutQuad(  x: number): number { return 1 - (1 - x) * (1 - x); }
function easeInOutQuad(x: number): number { return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2; }

function easeInCubic(   x: number): number { return x * x * x; }
function easeOutCubic(  x: number): number { return 1 - Math.pow(1 - x, 3); }
function easeInOutCubic(x: number): number { return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2; }

function easeInQuart(   x: number): number { return x * x * x * x; }
function easeOutQuart(  x: number): number { return 1 - Math.pow(1 - x, 4); }
function easeInOutQuart(x: number): number { return x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2; }

function easeInQuint(   x: number): number { return x * x * x * x * x; }
function easeOutQuint(  x: number): number { return 1 - Math.pow(1 - x, 5); }
function easeInOutQuint(x: number): number { return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2; }

function easeInExpo( x: number): number { return x === 0 ? 0 : Math.pow(2, 10 * x - 10); }
function easeOutExpo(x: number): number { return x === 1 ? 1 : 1 - Math.pow(2, -10 * x); }
function easeInOutExpo(x: number): number 
{ 
  return x === 0 ? 0  
    : x === 1 ? 1 
    : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2
    : (2 - Math.pow(2, -20 * x + 10)) / 2;
}