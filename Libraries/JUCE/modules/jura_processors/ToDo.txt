-fix bugs in straightliner:
 -init patch not loaded
 -tuning file widget set looks weird
 -colors are wrong
 -filter plot doesn't update when dragging around the handle


-introduce subtrees: Instruments, Effects, Filters, Analyzers, etc. for Chainer
 -look into Liberty or Quadrifex how this is done - it's in 
  EffectSelectionPopup::EffectSelectionPopup

-make available in Chainer (and let it have a custom editor):
 -AciDevil (done)
 -FuncShaper (done)
 -EngineersFilter (done)
 -Liberty (done) 
 -Straightliner (done - but buggy)

 -AlgoVerb
 -ChannelMatrix2x2
 -CrossOver
 -EasyQ
 -DspWorkbench
 -MultiAnalyzer
 -EchoLab
 -SimpleSampler
 -KeyShot
 -PitchShifter
 -MagicCarpet
 -Quadrifex
 -Quadriga
 -Workhorse
 -Moduluxury
 -TrackMeter
 -MidiMonitor
 -StereoDelay








-maybe move VectorMixer to basics?
-split VariousModules into VariousGenerators, VariousEffects, so we can move Quadrigen from 
 instruments to generators (it currently depends on VariousModules but would then only depend
 on VariousGenerators which may be included before)

-get rid of the lock parameter in constructor of PolyphonicInstrumentEditor (it's sufficient to pass
 the module - the editor can retrieve the lock from there)

make old plugins available in chainer:
we mostly need to provide a 2nd constructor that doesn't wrap an existing core-object but creates 
its own, provide a flag, whether or not the wrpeed object is owned and write a destructor that 
deletes the object conditionally, also an override of processBlock and createEditor is needed

-try to get romos (and Liberty) to compile on gcc

-EngineersFilter editor: remove additional space/infoline
-AciDevilEditor: needs other initial size, maybe should not be resizable
 
-turn rapt into a juce module (with no dependencies)
-make rapt and rosic test/demo projects
-maybe rename rosic to rs_dsp - or maybe raps (Rob's Audio Processing Suite) - jura needs no rename
 or: stay with rapt as rob's audio processing toolkit and have a rapt and a rapt_templates module
-get rid of "using namespace" in headers - lorcan says, this is something to be avoided
-templatize rosic classes and move templates to rapt
-in rapt: use omega instead of freq/sampleRate (avoid data redundancy)
-avoid name clashes with juce classes by using rs-prefix (perhaps on all rosic classes, at least on 
 those which clash with juce classes of the same name - but perhaps better for all for consistency)
-maybe rename RSlider, etc into rsSlider too - for consistency (it's important to that only after
 all old plugin code has been dragged over, otherwise compiler errors will be overwhelming
 when dragging over a new class)
-maybe we should generally use the rs prefix to be safe against later additions to juce
 -clients don't want to have to deal with name clashes when the incorporate my modules, so...
  yeah...prefix everything with rs - makes it also easier later to drag in code from RSLib

-make repaintOnMessageThread() work, use it for updating displays, widgets etc. when midi events 
 are received (they are received on the audio thread, but should update the GUI, too)

-clean up the BitmapFont static instance variable vs global object mess. get rid of global objects
 use the instance variables everywhere (because they can be used also across the dependent library 
 modules whereas the global objects are invisible


Bugs:
-on "Undo" in Reaper (to undo a parameter change), the widgets are not updated
 -Reaper's "Undo" calls AudioPlugin::setStateInformation, there is the line
  ParameterObserver::guiAutomationSwitch = false;
  which temporarily turns off receiving notifications for all widgets globally 
  and that's why the widgets don't update. i'm sure, what's the best way to 
  fix that ...why do we switch that off anyway...is was to solve some other 
  issue...figure out...



AudioPlugin:  

MetaParameters:
-make renamable via GUI 
-have an Auto-Rename feature (renames to assigned parameter's name)
-allow to optionally map midi controllers to meta-parameters
-fix updating of the frequency-response plot in the Ladder when parameters are automated

AudioModuleChain: use inherited childModules array instead of "modules"

RSlider: 
-make default-values and enter-value available on right-click (it's currently only
 available in subclass AutomatableSlider)


ParameterManager: rename functions to addParameter, removeParameter

State load/save widget set: click on textfield should open menu with files in current folder

GenericAudioModuleEditor: complete widget arrangement (buttons, boxes)

Enveloper:
-check, why it goes through release twice when there's no loop active
-maybe make a plugin that uses two or three envelopes to test the multi-editor
 (perhaps a dual ladder filter)

General:
-use the "virtual" qualifier for methods more conservatively - only when overriding is needed
-move more functions from public into protected, avoid acquiring mutex locks inside protected
 functions (they are supposed to be called from public functions which already hold the mutex)
-take more care about const correctness in declarations


