
General:
-The hue-offset sliders seem to have no effect when using the mouse-wheel. Maybe it's because we 
 trigger the update of the colors in mouseUp()? But no - that doesn't seem to be the case.
-Meters such as in TrackMeter tend to be unresponsive when scaling is used on the OS level. For 
 example, on windows with my 4k screen at 3840x2160, I like to use a scaling of 150%.  That bogs
 down the graphics rendering. Using 100%, the graphics runs smoothly but then at 3840x2160, 
 everything is too small. 2560x1440 seems to be a nice setting, too - it fills the screen, fonts 
 have the right size and meters run smoothly. At that setting, GUI elements have roughly the same 
 size as at 3840x2160/150%. BUT: the font rendering looks mote blurry, at least in Notepad++.
-In tracktion, the plots (waveforms in osc, scope, analyzer, etc. are often not drawn correctly. 
 Looks like left part of the drawing area doesn't get updated. That happens only in High-res mode.
 Maybe it's the 150% scaling that I use there?
-For some Straightliner factory patches, it doesn't find the waveform files
-Plug in AcidDevil, load ToolChain preset Acid8.xml, skip one forward - it should load Acid8_2.xml 
 but instead, it loads Acid.xml instead. When skipping formward through the list, we'll eventually 
 arrive at Acid9.xml again and the skipping one further actually loads the correct patch.
-Check, if StereoDelay, EchoLab etc have the same BPM setting as AcidDevil. Actually, it would be 
 better to specify the BPM for ToolChain as a whole. Maybe in the Setup
-[fixed ]after loading a patch with AcidDevil, the "Preset" label of AcidDevil is drawn in black. 
 When switching to another slot and back, this gets fixed
 -check the painting of the stateWidgetSet member in jura::EditorWithStateFile
 -check WidgetSet::setColourSchemeFromXml - why can't we just rely on the inherited basclass method
  ...that takes a reference instead of a pointer - maybe we somehere have only a pointer which can 
  be a nullptr?
-[fixed?] load Acid8.xml in ToolChain, switch to next preset -> crash
 -it seems to have to do with the StereoDelay in Slot 2 (?)

Sampler:
-load Saw_FilterTwoEnvs.sfz
 -adsr1_cutoff slider seems to do nothing, adsr1_attack also - no audible changes
 -fileg_depth is not in the right position in the tree...maybe because it's a mod-routing? But 
  that's confusing for the user. But maybe we can collect the modulations under a child-node
  called ModMatrix or something. Then it may be less confusing. SFZ has no concept of a mod-matrix
  so the textual representation of a patch deviates from the internal data structures
-the roundtrip between moving a slider and-re-parsing the code introduces small errors. Has it to 
 do with float rounding? Or with the float -> string -> float roundtrip?
-when cutoff is set to 0 via the slider, in the code a 00 shows up instead of 0
 -what is actually the desired behavior? currently, the filter turns to bypass, but I actually 
 think, in case of a lowpass, it should turn off the sound. In a highpass filter, switching to 
 bypass seems appropriate, though.
 
 
-Straightliner:
 -Load the InitPatchSawtooth, open the "More" menu, tweak the level slider - when setting it to too 
  low values, the parameter and also the waveform display freezes.
 -The forward/backward buttons for the Oscillator sub-presets do not work. (in VST-Host - in 
  Tracktion, it's OK). Check the current path for the loader. in standalone, when using "Load", it 
  opens the parent directory of the actual subdirectories in which the sub-presets reside. Maybe 
  that's the reason.
 -The ToolChain patch StraightlinerTest3.xml ha Osc2 muted even though when saving the patch, the osc
  was not muted. Figure out, how it happens that a wrong value for the Mute attibute gets written 
  into the xml. Try to reproduce the behavior: start with init-patch, activate Osc2, save the patch 
  (in ToolChain and in Straightliner) - inspect it
  ...I think, I reproduced it by pluugin in straighliner fresh, loading an osc-section preset with 
  triangle waves (i think, i just used the "Next" button), then closing and re-opening ToolChain
  standalone
 
MultiAnalyzer
 -Spectral view is unresponsive, laggy, unsmooth in VSTHost but also in standalone (debug) builds. 
  In Tracktion Waveform, a release-build seems to run smoothly. OK - standalone/release look kida 
  smooth except when the sound turns off - it looks like is has a peak-hold or something. Check 
  that! But maybe it's the note-off that triggers some processing and bogs down the system?
 
 
Fixed(?):
 
Wavetable oscillator:
-It sometimes happens when opening ToolChain and it wants to recall the Straightliner state, that 
 the xml-element for the osc section looks like this:
   <OscSection PatchFormat="1">
    <Osc1 PatchFormat="1" AudioFileRelativePath=""/>
    <Osc2 PatchFormat="1" AudioFileRelativePath=""/>
    <Osc3 PatchFormat="1" AudioFileRelativePath=""/>
    <Osc4 PatchFormat="1" AudioFileRelativePath=""/>
  </OscSection>
 and then, when AudioFileManager::createAudioSampleBufferFromFile is called, we get an error that 
 complains that it can't open the file "C:\Users\rob\AppData\Roaming\RS-MET". 
 -Check, what the oscillator produces as xml output, when no file is loaded. Does it just produce
  the directory path? It should actually not create an AudioFileRelativePath xml-attribute at all in
  such a case. Look at oscillatorStereoStateToXml. It does:
    juce::String samplePath = juce::String(osc->waveTable->getSampleName());  
    xmlState->setAttribute("AudioFileRelativePath", samplePath);
  apparently, the osc->waveTable->getSampleName() returns the empty string such that the absolute
  path that is generated becomes "C:\Users\rob\AppData\Roaming\RS-MET". OK, I added:
    if(!samplePath.isEmpty())
  before setting the attribute. That should hopefully fix it.
  
  because someone, somewhere has set the path member to this value
 

-[FIXED] load NoiseWhistle.sfz, then in the TreeView:
 -click on cutoff -> cutoff slider appears
 -click on resonance -> reso slide does not appear
 -click volume -> slider appears
 -click resonance -> now the silder appears correctly
 
-load NoiseWhistle.sfz, then in the TreeView:
 -click on cutoff 
 -change value
  -> debug assertion is triggered. Maybe it's because it's a group setting rather thana region 
  setting?

EchoLab:
-Produces memory leak when closing the app

-Saving the sfz file seems to save the old (buffered) text unless the new code was parsed. Not sure
 if that behavior is good or bad...but probably bad
-When a new sfz file is added to the directory, the file-manager doesn't seem to recognize it - when 
 using the foward/backward skip buttons, it still only knows the old files. We probably need to 
 update the intenrally stored file-list after saving