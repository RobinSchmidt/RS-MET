The standalone version creates a ToolChain.settings file in the folder:

C:\Users\rob\AppData\Roaming\ToolChain

Sometimes, it may be necessary to delete this file when the App crashes on startup. I sometimes hit 
a jassert in MidiMessageCollector::addMessageToQueue at startup. Deleting the settings file can help
to get passed this. This error also seems to happen when I have ToolChain already open and switch on 
the MIDI keyboard - and after that, it happens on restarting ToolChain.

In ColourSchemeComponent::paintOverChildren, there's a switch to turn on showing the pixel size of
GUI editors which is useful for figuring out the optimal size.


For an easy workflow for debugging, build the PluginHost (in the 
AudioApplications folder) and set up the visual studio project such that it
runs the just built Plugin Host. For this to work, set on the Property settings
under "Debugging" the "Command" field to the .exe that results from the build.
On my machine, the path is:

E:\Programming\C++\RS-MET\Products\Applications\PluginHost\Builds\VisualStudio2015\x64\Debug\App\Plugin Host.exe


to build a release version with the linux makefile, open a terminal in the 
folder containing the makefile and call:

make CONFIG=Release

just calling:

make

will build a debug version

the following developer packages have to be installed (via the command 
line terminal):
sudo apt-get install libasound2-dev 
sudo apt-get install libfreetype6-dev
sudo apt-get install libx11-dev
sudo apt-get install libxrandr-dev 
sudo apt-get install libxinerama-dev
sudo apt-get install libxcursor-dev

sudo apt-get install libcurl-dev
or 
sudo apt-get install libcurl4-openssl-dev  ?
...both can't be installed but they seem to be not needed - removing all 
occurences of "libcurl" from the makefile, makes it build

for the juce PluginHost - additionally this is needed:
sudo apt-get install libgl-dev

The CodeBlocksWindows build has been set to a 32 bit build because i was getting errors in 64 bit.
This is meant only for fixing gcc build errors on windows without the  need to switch to linux or
osx.










To view an array (say named A) in the Visual Sudio debugger:
-right-click on A in the code -> select Add watch
-double-click on A in watch window and edit it to A,10 to watch 10 elements
-now it can be expanded just like std::vector
-one can also typecast a void-pointer by prepending e.g. (*double)
-one can also view another chunk of the array by adding an offset like: A+100,10

